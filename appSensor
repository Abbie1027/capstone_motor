import sys
from PyQt5.uic import loadUi
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QWidget, QStackedWidget

importing raspberrypi 
import RPi.GPIO as GPIO
import time 
from collections import Counter

import pyrebase

#need to import pyrebase
firebaseConfig = {
  'apiKey': "AIzaSyDFcKZxM45qSe9DmtSPoUwwVYilclTouKs",
  'authDomain': "capstone-project-6325f.firebaseapp.com",
  'databaseURL': "https://capstone-project-6325f-default-rtdb.firebaseio.com",
  'projectId': "capstone-project-6325f",
  'storageBucket': "capstone-project-6325f.appspot.com",
  'messagingSenderId': "463650994151",
  'appId': "1:463650994151:web:62f7742b008e5485726f42",
  'measurementId': "G-E88E98P34S"
};
firebase = pyrebase.initialize_app(firebaseConfig)

db = firebase.database()
auth = firebase.auth()

class UserProfile(QDialog):
    def __init__(self):
        super(UserProfile,self).__init__()
        
        loadUi("profile.ui",self)
        med_name = self.medname.text()
        med_num = self.mednum.text()

        self.refreshbu.clicked.connect(self.sensorInitiate)
                
         
   # def pushData(self):
   #     med_name = self.medname.text()
   #     med_num = self.mednum.text()
   #     data = {"Medication name":med_name, "Number of pills":med_num}
   #     db.child("user").push(data)

    def sensorInitiate(self):
        GPIO.setmode(GPIO.BOARD)
        GPIO.setwarnings(False)

pin =7
counter=50 
GPIO.setup(pin,GPIO.IN)

#total is med_num extracted from before
total=med_num

try:
    while True:
        if GPIO.input(pin) >=1:
            #print("Light off")
            time.sleep(.05)
           
          
            tend=time.time() +1*1
            while time.time() < tend:
                 i=GPIO.input(pin)
                 if i==True:
                     counter=counter-1
                     print(counter)
                     break
                     if counter==0:
                         exit()
            data = {"Med num new":counter}
            db.push(data)
            
            
             
        else:
        
            pass
            
        
            
           
except  KeyboardInterrupt:
    GPIO.cleanup()



app = QApplication(sys.argv) #always need this to launch the app, pass command line arguments to it
UP = UserProfile()

#stacking on top of this widget called widget
widget = QStackedWidget()
widget.addWidget(UP)
widget.setFixedHeight(300)
widget.setFixedWidth(400)
widget.show()



try:
    sys.exit(app.exec_())

except:
    print("Done")
